/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 6);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(1);
            var content = __webpack_require__(2);

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = "head";
options.singleton = false;

var update = api(content, options);

var exported = content.locals ? content.locals : {};



module.exports = exported;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isOldIE = function isOldIE() {
  var memo;
  return function memorize() {
    if (typeof memo === 'undefined') {
      // Test for IE <= 9 as proposed by Browserhacks
      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
      // Tests for existence of standard globals is to allow style-loader
      // to operate correctly into non-standard environments
      // @see https://github.com/webpack-contrib/style-loader/issues/177
      memo = Boolean(window && document && document.all && !window.atob);
    }

    return memo;
  };
}();

var getTarget = function getTarget() {
  var memo = {};
  return function memorize(target) {
    if (typeof memo[target] === 'undefined') {
      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
        try {
          // This will throw an exception if access to iframe is blocked
          // due to cross-origin restrictions
          styleTarget = styleTarget.contentDocument.head;
        } catch (e) {
          // istanbul ignore next
          styleTarget = null;
        }
      }

      memo[target] = styleTarget;
    }

    return memo[target];
  };
}();

var stylesInDom = [];

function getIndexByIdentifier(identifier) {
  var result = -1;

  for (var i = 0; i < stylesInDom.length; i++) {
    if (stylesInDom[i].identifier === identifier) {
      result = i;
      break;
    }
  }

  return result;
}

function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var index = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3]
    };

    if (index !== -1) {
      stylesInDom[index].references++;
      stylesInDom[index].updater(obj);
    } else {
      stylesInDom.push({
        identifier: identifier,
        updater: addStyle(obj, options),
        references: 1
      });
    }

    identifiers.push(identifier);
  }

  return identifiers;
}

function insertStyleElement(options) {
  var style = document.createElement('style');
  var attributes = options.attributes || {};

  if (typeof attributes.nonce === 'undefined') {
    var nonce =  true ? __webpack_require__.nc : undefined;

    if (nonce) {
      attributes.nonce = nonce;
    }
  }

  Object.keys(attributes).forEach(function (key) {
    style.setAttribute(key, attributes[key]);
  });

  if (typeof options.insert === 'function') {
    options.insert(style);
  } else {
    var target = getTarget(options.insert || 'head');

    if (!target) {
      throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
    }

    target.appendChild(style);
  }

  return style;
}

function removeStyleElement(style) {
  // istanbul ignore if
  if (style.parentNode === null) {
    return false;
  }

  style.parentNode.removeChild(style);
}
/* istanbul ignore next  */


var replaceText = function replaceText() {
  var textStore = [];
  return function replace(index, replacement) {
    textStore[index] = replacement;
    return textStore.filter(Boolean).join('\n');
  };
}();

function applyToSingletonTag(style, index, remove, obj) {
  var css = remove ? '' : obj.media ? "@media ".concat(obj.media, " {").concat(obj.css, "}") : obj.css; // For old IE

  /* istanbul ignore if  */

  if (style.styleSheet) {
    style.styleSheet.cssText = replaceText(index, css);
  } else {
    var cssNode = document.createTextNode(css);
    var childNodes = style.childNodes;

    if (childNodes[index]) {
      style.removeChild(childNodes[index]);
    }

    if (childNodes.length) {
      style.insertBefore(cssNode, childNodes[index]);
    } else {
      style.appendChild(cssNode);
    }
  }
}

function applyToTag(style, options, obj) {
  var css = obj.css;
  var media = obj.media;
  var sourceMap = obj.sourceMap;

  if (media) {
    style.setAttribute('media', media);
  } else {
    style.removeAttribute('media');
  }

  if (sourceMap && btoa) {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    while (style.firstChild) {
      style.removeChild(style.firstChild);
    }

    style.appendChild(document.createTextNode(css));
  }
}

var singleton = null;
var singletonCounter = 0;

function addStyle(obj, options) {
  var style;
  var update;
  var remove;

  if (options.singleton) {
    var styleIndex = singletonCounter++;
    style = singleton || (singleton = insertStyleElement(options));
    update = applyToSingletonTag.bind(null, style, styleIndex, false);
    remove = applyToSingletonTag.bind(null, style, styleIndex, true);
  } else {
    style = insertStyleElement(options);
    update = applyToTag.bind(null, style, options);

    remove = function remove() {
      removeStyleElement(style);
    };
  }

  update(obj);
  return function updateStyle(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {
        return;
      }

      update(obj = newObj);
    } else {
      remove();
    }
  };
}

module.exports = function (list, options) {
  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
  // tags it will allow on a page

  if (!options.singleton && typeof options.singleton !== 'boolean') {
    options.singleton = isOldIE();
  }

  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];

    if (Object.prototype.toString.call(newList) !== '[object Array]') {
      return;
    }

    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDom[index].references--;
    }

    var newLastIdentifiers = modulesToDom(newList, options);

    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];

      var _index = getIndexByIdentifier(_identifier);

      if (stylesInDom[_index].references === 0) {
        stylesInDom[_index].updater();

        stylesInDom.splice(_index, 1);
      }
    }

    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(3);
var ___CSS_LOADER_GET_URL_IMPORT___ = __webpack_require__(4);
var ___CSS_LOADER_URL_IMPORT_0___ = __webpack_require__(5);
exports = ___CSS_LOADER_API_IMPORT___(false);
var ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);
// Module
exports.push([module.i, "body{margin:0 auto;padding:0;background-image:url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ");background-size:cover;font-family:Arial, Helvetica, sans-serif}.section1{background-size:cover;background-color:white;height:30vh;width:100vw;font-size:1.5em;display:flex;justify-content:center}.section1 .trip-info{display:flex;flex-direction:row;justify-content:center;align-items:center}.section1 .trip-info .departure{display:flex;flex-direction:row;justify-content:center;align-items:center;margin:10px}.section1 .trip-info .date1{border:1px solid black;height:5vh;width:20vw;font-size:1em;padding:5px}.section1 .trip-info .form .city-text{border:1px solid black;font-size:1em;width:20vw;height:5vh;padding:5px}.section1 .trip-info .form :hover{cursor:pointer}.section2{visibility:hidden;background-color:rgba(128,0,128,0.233);min-height:50vh;display:flex;justify-content:center;font-size:1.3em}.section2 .section2-cont{margin:50px;padding:10px;display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;width:70vw}.section2 .section2-cont .photo{text-align:center;width:auto;height:auto}.section2 .section2-cont .photo img{width:40%;height:50%}.section3{visibility:hidden;min-height:50vh;display:flex;flex-direction:column;justify-content:center;align-items:center}.section3 h1{text-align:center;font-size:1.3em}.section3 .weather-cont{display:flex;flex-direction:row;justify-content:center}.section3 .weather-cont .sub-cont{width:10vw;height:15vh;margin:5px;padding:10px;text-align:center;background:#020024;background:linear-gradient(90deg, #020024 0%, #a1e1ee 0%, #79a3e3 100%)}@media (max-width: 1100px){body{font-size:1.3em}.section1{height:30vh}.section1 .trip-info{display:flex;flex-direction:column;justify-content:center;align-items:center}.section1 .trip-info .departure{display:flex;flex-direction:column;justify-content:center;align-items:center}.section1 .trip-info .date1{height:4vh;width:50vw;font-size:1em;padding:5px}.section1 .trip-info .form .city-text{font-size:1em;width:50vw;height:4vh;padding:5px}.section2{height:60vh;display:flex;justify-content:center;align-items:center;font-size:1.2em}.section2 .section2-cont{margin:50px}.section2 .section2-cont .photo{text-align:center;width:auto;height:auto}.section2 .section2-cont .photo img{width:70%;height:70%}.section3{visibility:hidden;min-height:100vh}.section3 h2{text-align:center;margin:10px;padding:10px}.section3 .weather-cont{display:flex;flex-direction:column;flex-wrap:wrap}.section3 .weather-cont .sub-cont{width:40vw;height:15vh;margin:5px;padding:5px;text-align:center;color:grey}}.footer{background-color:rgba(2,2,104,0.705);color:white;display:flex;justify-content:center;align-items:center;height:10vh}.header{background-color:#020268;color:white;height:10vh;text-align:center;padding:10px}\n", ""]);
// Exports
module.exports = exports;


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }

      return content;
    }).join('');
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery, dedupe) {
    if (typeof modules === 'string') {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, '']];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var i = 0; i < this.length; i++) {
        // eslint-disable-next-line prefer-destructuring
        var id = this[i][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _i = 0; _i < modules.length; _i++) {
      var item = [].concat(modules[_i]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        // eslint-disable-next-line no-continue
        continue;
      }

      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }

      list.push(item);
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring

  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || '').concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
  return "/*# ".concat(data, " */");
}

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function (url, options) {
  if (!options) {
    // eslint-disable-next-line no-param-reassign
    options = {};
  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign


  url = url && url.__esModule ? url.default : url;

  if (typeof url !== 'string') {
    return url;
  } // If url is already wrapped in quotes, remove them


  if (/^['"].*['"]$/.test(url)) {
    // eslint-disable-next-line no-param-reassign
    url = url.slice(1, -1);
  }

  if (options.hash) {
    // eslint-disable-next-line no-param-reassign
    url += options.hash;
  } // Should url be wrapped?
  // See https://drafts.csswg.org/css-values-3/#urls


  if (/["'() \t\n]/.test(url) || options.needQuotes) {
    return "\"".concat(url.replace(/"/g, '\\"').replace(/\n/g, '\\n'), "\"");
  }

  return url;
};

/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (__webpack_require__.p + "644bb462963e7f7d1cb133090e6927ba.jpg");

/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "getCoordinates", function() { return /* binding */ getCoordinates; });
__webpack_require__.d(__webpack_exports__, "getWeather", function() { return /* binding */ getWeather; });
__webpack_require__.d(__webpack_exports__, "getPhoto", function() { return /* binding */ getPhoto; });
__webpack_require__.d(__webpack_exports__, "updateUI", function() { return /* binding */ updateUI; });
__webpack_require__.d(__webpack_exports__, "locationInfo", function() { return /* binding */ locationInfo; });

// CONCATENATED MODULE: ./src/client/js/getRequest.js
const sendData = (data) => {
  fetch("http://localhost:5500/geocoords", {
    method: "POST",
    credentials: "same-origin",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify(data),
  })
    .then((response) => {
      return response.json();
    })
    .then((data) => {
      return data;
    })
    .catch((error) => {
      console.log(error);
    });
};



// CONCATENATED MODULE: ./src/client/js/eventHandler.js



const eventHandler_form = document.querySelector(".form");
const cityText = document.querySelector(".city-text");
const date = document.querySelector(".date1");

const checkInput = () => {
  eventHandler_form.addEventListener("submit", (e) => {
    e.preventDefault();
    let cityValue = cityText.value;
    if (cityText.value.length < 1 || date.value === "") {
      alert("Enter a date and city");
    } else {
      getCoordinates(cityValue);

      setTimeout(() => {
        getWeather(locationInfo.latitude, locationInfo.longitude);
      }, 2000);

      setTimeout(() => {
        getPhoto(cityValue);
      }, 2000);

      setTimeout(() => {
        updateUI();
      }, 3000);

      setTimeout(() => {
        document.querySelector(".section2").style = "visibility: visible;";
        document.querySelector(".section3").style = "visibility: visible;";
      }, 2000);
    }

    setTimeout(() => {
      console.log(locationInfo);
    }, 2000);
  });
};



// EXTERNAL MODULE: ./src/client/styles/style.scss
var style = __webpack_require__(0);

// CONCATENATED MODULE: ./src/client/index.js



// const runApplication = () => {
const client_form = document.querySelector(".form");
const client_cityText = document.querySelector(".city-text");
const destination = document.querySelector(".destination");
const client_date = document.querySelector(".date1");
const dateHeading = document.querySelector(".date-heading");
const weather1 = document.querySelector(".weather1");
const day1 = document.querySelector(".day1");
const weather2 = document.querySelector(".weather2");
const day2 = document.querySelector(".day2");
const weather3 = document.querySelector(".weather3");
const day3 = document.querySelector(".day3");
const weather4 = document.querySelector(".weather4");
const day4 = document.querySelector(".day4");
const weather5 = document.querySelector(".weather5");
const day5 = document.querySelector(".day5");

const proxy = "https://cors-anywhere.herokuapp.com/";

let locationInfo = {
  city: "",
  country: "",
  latitude: "",
  longitude: "",
};

let weatherForecast = {
  dayOne: {
    temp: "",
    date: "",
  },
  dayTwo: {
    temp: "",
    date: "",
  },
  dayThree: {
    temp: "",
    date: "",
  },
  dayFour: {
    temp: "",
    date: "",
  },
  dayFive: {
    temp: "",
    date: "",
  },
};

// Handle GET and POST requests for the geo-coordiantes data
const getCoordinates = (city) => {
  fetch(
    `${proxy}http://api.geonames.org/searchJSON?q=${city}&maxRows=10&username=rayomon`
  )
    .then((response) => {
      return response.json();
    })

    // Calling POST request
    .then((data) => {
      sendData(data);
    })
    // Calling GET request
    .then(() => {
      fetchCoords();
    })

    .catch((error) => {
      console.log(error);
    });
};

// Make a POST request to server with the geo-coordinates data
// const sendData = (data) => {
//   fetch("http://localhost:5500/geocoords", {
//     method: "POST",
//     credentials: "same-origin",
//     headers: {
//       "Content-Type": "application/json",
//     },
//     body: JSON.stringify(data),
//   })
//     .then((response) => {
//       return response.json();
//     })
//     .then((data) => {
//       return data;
//     })
//     .catch((error) => {
//       console.log(error);
//     });
// };

// Making GET request to retrieve geo coordinates
const fetchCoords = () => {
  fetch("http://localhost:5500/geocoords")
    .then((response) => {
      return response.json();
    })
    .then((data) => {
      // console.log(data);
      locationInfo.latitude = data.latitude;
      locationInfo.longitude = data.longitude;
      locationInfo.city = data.name;
      locationInfo.country = data.country;
    })
    .catch((error) => {
      console.log(error);
    });
};

const getWeather = (lat, lon) => {
  fetch(
    `https://api.weatherbit.io/v2.0/forecast/daily?key=73dcbe9d0fe3416a94f73a8bdbc18d78&lat=${lat}&lon=${lon}&days=7&units=I`
  )
    .then((response) => {
      return response.json();
    })
    .then((data) => {
      // Weather forecast for 4 days with the date reversed
      // to give the correct format.
      weatherForecast.dayOne.temp = data.data[0].temp;
      weatherForecast.dayOne.date = data.data[0].datetime
        .split("-")
        .reverse()
        .join("-");
      weatherForecast.dayTwo.temp = data.data[1].temp;
      weatherForecast.dayTwo.date = data.data[1].datetime
        .split("-")
        .reverse()
        .join("-");
      weatherForecast.dayThree.temp = data.data[2].temp;
      weatherForecast.dayThree.date = data.data[2].datetime
        .split("-")
        .reverse()
        .join("-");
      weatherForecast.dayFour.temp = data.data[3].temp;
      weatherForecast.dayFour.date = data.data[3].datetime
        .split("-")
        .reverse()
        .join("-");
      weatherForecast.dayFive.temp = data.data[4].temp;
      weatherForecast.dayFive.date = data.data[4].datetime
        .split("-")
        .reverse()
        .join("-");
    })
    .catch((error) => {
      console.log(error);
    });
};

const getPhoto = (city) => {
  fetch(
    `${proxy}https://pixabay.com/api/?key=16039104-d4a665d2570df15bc2b3dc6da&q=${city}&image_type=photo`
  )
    .then((response) => {
      return response.json();
    })
    .then((data) => {
      // console.log(data);
      const image = document.createElement("img");
      let imgUrl = data.hits[0].largeImageURL;
      image.setAttribute("alt", "photo");
      image.setAttribute("src", imgUrl);
      document.querySelector(".photo").appendChild(image);
    })

    .catch((error) => {
      console.log(error);
    });
};

const updateUI = () => {
  // Set the travel date
  let presentDate = new Date().getDate();
  let selectedDate = client_date.value;

  // Convert the value of date input into an array of numbers
  let dateString = selectedDate.toString().split("-");

  // Select the third value which represents the date
  selectedDate = dateString[2];

  let tripCountdown = selectedDate - presentDate;

  let travelSummary;

  destination.textContent = `${locationInfo.city}, ${locationInfo.country}`;
  tripCountdown === 1
    ? (travelSummary = `Your trip to ${
        locationInfo.city
      } is ${tripCountdown} day away. You will be leaving on ${dateString
        .reverse()
        .join("-")}`)
    : (travelSummary = `Your trip to ${
        locationInfo.city
      } is ${tripCountdown} days away. You will be leaving on ${dateString
        .reverse()
        .join("-")}`);

  dateHeading.textContent = travelSummary;

  // Set Weather
  weather1.textContent = `${weatherForecast.dayOne.temp} ℉`;
  day1.textContent = weatherForecast.dayOne.date;

  weather2.textContent = `${weatherForecast.dayTwo.temp} ℉`;
  day2.textContent = weatherForecast.dayTwo.date;

  weather3.textContent = `${weatherForecast.dayThree.temp} ℉`;
  day3.textContent = weatherForecast.dayThree.date;

  weather4.textContent = `${weatherForecast.dayFour.temp} ℉`;
  day4.textContent = weatherForecast.dayFour.date;

  weather5.textContent = `${weatherForecast.dayFive.temp} ℉`;
  day5.textContent = weatherForecast.dayFive.date;
};

// Add Event Listener
// form.addEventListener("submit", (e) => {
//   e.preventDefault();
// let cityValue = cityText.value;
// if (cityText.value.length < 1 || date.value === "") {
//   alert("Enter a date and city");
// } else {

checkInput();

// getCoordinates(cityValue);

// setTimeout(() => {
//   getWeather(locationInfo.latitude, locationInfo.longitude);
// }, 2000);

// setTimeout(() => {
//   getPhoto(cityValue);
// }, 2000);

// setTimeout(() => {
//   updateUI();
// }, 3000);

// setTimeout(() => {
//   document.querySelector(".section2").style = "visibility: visible;";
//   document.querySelector(".section3").style = "visibility: visible;";
// }, 2000);
// }
// });
//   };

//   export { runApplication };


/***/ })
/******/ ]);